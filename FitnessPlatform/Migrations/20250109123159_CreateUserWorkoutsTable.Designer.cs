// <auto-generated />
using System;
using FitnessPlatform.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessPlatform.Migrations
{
    [DbContext(typeof(FitnessDbContext))]
    [Migration("20250109123159_CreateUserWorkoutsTable")]
    partial class CreateUserWorkoutsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessPlatform.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateOnly?>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("GrantDate")
                        .HasColumnType("date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DiscountId")
                        .HasName("PK__Discount__E43F6D96989FDC9D");

                    b.HasIndex("UserId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("FitnessPlatform.Models.NutritionalPlan", b =>
                {
                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("FoodStuff")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("FoodStuffCalories")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("Grammage")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("MealCalories")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("MealType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PlanType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("RegistrationDate")
                        .HasColumnType("date");

                    b.HasKey("PlanId")
                        .HasName("PK__Nutritio__755C22B727179788");

                    b.ToTable("NutritionalPlan", (string)null);
                });

            modelBuilder.Entity("FitnessPlatform.Models.Objective", b =>
                {
                    b.Property<int>("ObjectiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjectiveId"));

                    b.Property<DateOnly?>("Deadline")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ObjectiveType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("Progress")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("TargetValue")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ObjectiveId")
                        .HasName("PK__Objectiv__8C5633AD6112FF2E");

                    b.HasIndex("UserId");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("FitnessPlatform.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("SubscriptionType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Term")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId")
                        .HasName("PK__Subscrip__9A2B249DFA8EF3C6");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("FitnessPlatform.Models.SubscriptionPlan", b =>
                {
                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PlanPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasIndex("PlanId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionPlan", (string)null);
                });

            modelBuilder.Entity("FitnessPlatform.Models.SubscriptionWorkout", b =>
                {
                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WorkoutPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("SubscriptionWorkout", (string)null);
                });

            modelBuilder.Entity("FitnessPlatform.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("UserHeight")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("UserWeight")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C20CDA3AF");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitnessPlatform.Models.UserWorkout", b =>
                {
                    b.Property<int>("UserWorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserWorkoutId"));

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("UserWorkoutId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("UserWorkouts");
                });

            modelBuilder.Entity("FitnessPlatform.Models.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutId"));

                    b.Property<decimal?>("CaloriesBurned")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("ContentPath")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DifficultyLevel")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("WorkoutDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("WorkoutDuration")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("WorkoutType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("WorkoutId")
                        .HasName("PK__Workouts__E1C42A01CE1317B5");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("FitnessPlatform.Models.Discount", b =>
                {
                    b.HasOne("FitnessPlatform.Models.User", "UserIdNavigation")
                        .WithMany("Discounts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Discounts__UserI__4316F928");

                    b.Navigation("UserIdNavigation");
                });

            modelBuilder.Entity("FitnessPlatform.Models.Objective", b =>
                {
                    b.HasOne("FitnessPlatform.Models.User", "UserIdNavigation")
                        .WithMany("Objectives")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Objective__UserI__3D5E1FD2");

                    b.Navigation("UserIdNavigation");
                });

            modelBuilder.Entity("FitnessPlatform.Models.Subscription", b =>
                {
                    b.HasOne("FitnessPlatform.Models.User", "UserIdNavigation")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Subscript__UserI__403A8C7D");

                    b.Navigation("UserIdNavigation");
                });

            modelBuilder.Entity("FitnessPlatform.Models.SubscriptionPlan", b =>
                {
                    b.HasOne("FitnessPlatform.Models.NutritionalPlan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .HasConstraintName("FK__Subscript__PlanI__45F365D3");

                    b.HasOne("FitnessPlatform.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId")
                        .HasConstraintName("FK__Subscript__Subsc__44FF419A");

                    b.Navigation("Plan");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("FitnessPlatform.Models.SubscriptionWorkout", b =>
                {
                    b.HasOne("FitnessPlatform.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId")
                        .HasConstraintName("FK__Subscript__Subsc__47DBAE45");

                    b.HasOne("FitnessPlatform.Models.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutId")
                        .HasConstraintName("FK__Subscript__Worko__48CFD27E");

                    b.Navigation("Subscription");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("FitnessPlatform.Models.UserWorkout", b =>
                {
                    b.HasOne("FitnessPlatform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessPlatform.Models.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("FitnessPlatform.Models.User", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Objectives");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
